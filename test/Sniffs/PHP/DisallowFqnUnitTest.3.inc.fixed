<?php

namespace MyNamespace;

use Other\MethodReturn;
use Other\Param1;
use Other\Param2;
use DateTime;
use ArrayObject;
use ArrayAccess;
use FooBar\Baz;
use Exception;
use Error;
use OtherName\ReturnType;
use Traversable;

use ImportedClass;

/**
 * Class MyClass
 *
 * @package MyNamespace
 * @method MethodReturn myMethod(Param1 $param1, Param2|Param2Other $param2)
 * @property Date $date
 * @property Service\DateService $dateService
 * @property-read DateTime $dateTime
 * @property-write ArrayObject
 */
class MyClass
{
    /**
     * @var null|Something|ArrayAccess
     */
    public $property;

    /**
     * @param self|Baz $param
     * @throws Exception|Error
     */
    public function __construct(self $param)
    {
    }

    /**
     * @param \OtherNamespace\ImportedClass $param
     * @return object|ReturnType
     */
    public function withReturn(\OtherNamespace\ImportedClass $param)
    {
        return $x;
    }

    /**
     * @param DateTime[]|ArrayObject[]
     * @return object[]|Traversable
     */
    public function arrayTypes(array $arr) : array
    {
        return $arr;
    }
}
