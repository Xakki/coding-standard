<?php
namespace MyApp\MyNamespace;

use Foo\BazTrait;
use MyProject\HelloWorld;

class Foo
{
    use BazTrait;
use \MyTrait;
    use TooManySpaces;
    use \AnotherTrait {
        \AnotherTrait::method as methodAlias;
    }
    use \Foo\ATrait;
    use \BarTrait    ;
    use XTrait  ;
use YTrait
        ;
    use \A;
use \B {
        \A::bigTalk insteadof \B;
      \B::smallTalk insteadof \A;
    }
    use HelloWorld {
sayHello as protected;
}
    use Hello {
sayHello as private myPrivateHello;
}
    use EmptyBrackets ;

    /**
     * @param mixed $x
     */
    public function __construct($x)
    {
        $anonymousClass = new class {
            use BTrait;
use ATrait;
        };

        $closure = function () use ($x) {};
    }
}
