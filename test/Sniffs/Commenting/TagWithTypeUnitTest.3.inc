<?php

namespace MyNamespace\Test;

use ArrayIterator as AI;
use DateTime;
use RuntimeException as Exception;
use ZTest\MyNamespace\ParentClass as VarTagParent;

class VarTag extends VarTagParent {
    /**
     * @var
     */
    public $a;

    /**
     * @var something
     */
    public $a;

    /**
     * @var $a something
     */
    public $a;

    /**
     * @var $c
     */
    public $a;

    /**
     * @var int $a
     */
    public $a;

    /**
     * @var mixed
     */
    public $a;

    /**
     * @var mixed[]
     */
    public $a;

    /**
     * @var mixed|mixed[]
     */
    public $a;

    /**
     * @var string|\DateTime[]|\Traversable
     */
    public $a;

    /**
     * @var VarTag
     */
    public $a;

    /**
     * @var \MyNamespace\Test\VarTag
     */
    public $a;

    /**
     * @var VarTagParent
     */
    public $a;

    /**
     * @var \ZTest\MyNamespace\ParentClass
     */
    public $a;

    /**
     * @var VarTag[]
     */
    public $a;

    /**
     * @var \MyNamespace\Test\VarTag[]
     */
    public $a;

    /**
     * @var VarTagParent[]
     */
    public $a;

    /**
     * @var \ZTest\MyNamespace\ParentClass[]
     */
    public $a;

    /**
     * @var ParentClass
     */
    public $a;

    /**
     * @var ParentClass[]
     */
    public $a;

    /**
     * @var bool|int|bool
     */
    public $a;

    /**
     * @var void
     */
    public $a;

    /**
     * @var void[]
     */
    public $a;

    /**
     * @var true|false
     */
    public $a;

    /**
     * @var bool|true
     */
    public $a;

    /**
     * @var bool|false
     */
    public $a;

    /**
     * @var \DateTime
     */
    public $a;

    /**
     * @var ?array
     */
    public $a;

    /**
     * @var |int|
     */
    public $a;

    /**
     * @var $a
     */
    public $a;

    /**
     * @var \RuntimeException
     */
    public $a;

    /**
     * @var String
     */
    public $a;

    /**
     * @var string|int|float
     */
    public $a;

    /**
     * @var DateTime|int|bool
     */
    public $a;

    /**
     * @var \ArrayObject|\ArrayAccess|DateTime|null
     */
    public $a;

    /**
     * @var boolean
     */
    public $a;

    /**
     * @var null[]|string[]
     */
    public $a;

    /**
     * @var $this
     */
    public $a;

    /**
     * @var null
     */
    public $a;

    /**
     * @var null[]
     */
    public $a;

    /**
     * @var null[][]
     */
    public $a;

    /**
     * @var null|null[]
     */
    public $a;

    /**
     * @var mixed|string
     */
    public $a;

    /**
     * @var array|mixed[]
     */
    public $a;

    /**
     * @var int|void
     */
    public $a;

    /**
     * @var ai
     */
    public $a;

    /**
     * @var AI
     */
    public $a;

    /**
     * @var \ArrayIterator
     */
    public $a;

    /** @var self */
    public $a;

    /** @var static */
    public $a;

    /** @var parent */
    public $a;

    /** @var Self */
    public $a;

    /** @var Static */
    public $a;

    /** @var Parent */
    public $a;

    /**
     * @var int $c Description.
     */
    public $a;

    /** @var $a */
    public $a;

    /** @var $a Description. */
    public $a;

    /**
     * @var array {
     *     @var bool $required
     *     @var string $label
     *     @var array $arr {
     *         @var int $counter
     *         @var float
     *         @var $precision
     *     }
     * }
     */
    public $a;

    public function test()
    {
        /** @var int */
        foreach (func_get_args() as $a) {
        }

        new class () {
            /** @var bool $a */
            private $a;
        };

        /** @var \RuntimeException\Hello $a Description. */
        $a = 'hello';
    }

    /**
     * @var \RuntimeException\Hello Description.
     */
    public $a;

    /**
     * @var    int    $moreThanOneSpace   Some  long  description
     */
    public $moreThanOneSpace;
}

// @phpcs:set WebimpressCodingStandard.Commenting.TagWithType nullPosition last

/** @var string|null $var */
$var = 'abc';

/** @var null|int $bar */
$bar = $var ? 12 : null;
